'use client'; import { useEffect,useMemo,useState } from 'react'; import { moneyBRL } from '@/lib/money';
export default function Agendar(){ const [services,setServices]=useState<any[]>([]); const [barbers,setBarbers]=useState<any[]>([]); const [serviceId,setServiceId]=useState<number|undefined>(); const [barberId,setBarberId]=useState<number|undefined>(); const [date,setDate]=useState<string>(()=>new Date().toISOString().slice(0,10)); const [slots,setSlots]=useState<string[]>([]); const [loading,setLoading]=useState(false);
useEffect(()=>{ fetch('/api/services').then(r=>r.json()).then(setServices); fetch('/api/barbers').then(r=>r.json()).then(setBarbers); },[]);
useEffect(()=>{ (async()=>{ if(!barberId||!serviceId||!date){setSlots([]);return;} setLoading(true); const data=await fetch(`/api/availability?barberId=${barberId}&serviceId=${serviceId}&date=${date}`).then(r=>r.json()); setSlots(data); setLoading(false); })(); },[barberId,serviceId,date]);
async function book(startISO:string){ const res=await fetch('/api/appointments',{ method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify({ barberId, serviceId, startISO }) }); if(res.ok) alert('Agendamento criado!'); else alert('Falha: '+await res.text()); }
const selectedService=useMemo(()=>services.find(s=>s.id===serviceId),[services,serviceId]);
return(<div className='bg-white border rounded p-4 space-y-4'><h1 className='text-xl font-semibold'>Agendar horario</h1>
<div className='grid grid-cols-1 md:grid-cols-3 gap-4'><div><label className='block text-sm mb-1'>Servico</label><select className='w-full border rounded px-3 py-2' value={serviceId||''} onChange={e=>setServiceId(Number(e.target.value)||undefined)}><option value=''>Selecione</option>{services.map((s:any)=>(<option key={s.id} value={s.id}>{s.name} â€” {moneyBRL(s.priceCents)} ({s.durationMin} min)</option>))}</select></div>
<div><label className='block text-sm mb-1'>Barbeiro</label><select className='w-full border rounded px-3 py-2' value={barberId||''} onChange={e=>setBarberId(Number(e.target.value)||undefined)}><option value=''>Selecione</option>{barbers.map((b:any)=>(<option key={b.id} value={b.id}>{b.user.name}</option>))}</select></div>
<div><label className='block text-sm mb-1'>Data</label><input type='date' className='w-full border rounded px-3 py-2' value={date} onChange={e=>setDate(e.target.value)}/></div></div>
<div><h2 className='font-medium mb-2'>Horarios disponiveis</h2>{loading? <div>Carregando...</div> : <div className='flex flex-wrap gap-2'>{slots.map(s=>{ const d=new Date(s); const label=d.toLocaleTimeString('pt-BR',{hour:'2-digit',minute:'2-digit'}); return <button key={s} onClick={()=>book(s)} className='px-3 py-2 border rounded hover:bg-gray-50'>{label}</button>; })}{(!slots||slots.length===0)&&<div className='text-sm text-gray-500'>Nenhum horario neste dia.</div>}</div>}</div>
{selectedService&&<div className='text-sm text-gray-600'>Duracao total com buffer: {selectedService.durationMin+selectedService.bufferMin} min</div>}</div>); }